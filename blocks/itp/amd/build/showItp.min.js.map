{"version":3,"file":"showItp.min.js","sources":["../src/showItp.js"],"sourcesContent":["import {exception as displayException} from 'core/notification';\nimport Templates from 'core/templates';\nimport { sortITPTable } from './commonFunctions';\n\nexport const init = (token,customer,group,billid,firstname,lastname) => {\n    let linkass=document.querySelector('.back');\n    linkass.addEventListener('click',(e)=>{\n        linkAssFunctionEvent(e,token,customer,group,billid,firstname,lastname);\n    });\n}\n\nconst linkAssFunctionEvent=(e,token,customer,group,billid,firstname,lastname)=>{\n    e.preventDefault();\n    const xhr=new XMLHttpRequest();\n    const url=window.location.protocol+'//'+window.location.hostname+'/webservice/rest/server.php';\n    xhr.open('POST',url,true);\n    const formData= new FormData();\n    formData.append('wstoken',token);\n    formData.append('wsfunction','block_itp_get_itp');\n    formData.append('moodlewsrestformat','json');\n    formData.append('params[0][orderby]','startdate');\n    formData.append('params[0][order]','ASC');\n    formData.append('params[0][customer]',customer);\n    formData.append('params[0][group]',group);\n    formData.append('params[0][billid]',billid);\n    xhr.send(formData);\n    xhr.onload=(event)=>{\n        onLoadFunction(xhr,firstname,lastname,token);\n    };\n    xhr.onprogress=(event)=>{\n        onProgressFunction(event);\n    };\n    xhr.onerror=()=>{\n        onErrorFunction();\n    };\n}\n\nconst onProgressFunction = (event)=> {\n    if (event.lengthComputable) {\n      window.console.log(`Recibidos ${event.loaded} de ${event.total} bytes`);\n    } else {\n      window.console.log(`Recibidos ${event.loaded} bytes`); // sin Content-Length\n    }\n  };\n  \nconst onErrorFunction = () => {\n    window.console.log(\"Solicitud fallida\");\n  };\n\nconst onLoadFunction=(myXhr,firstname,lastname,token)=>{\n    if (myXhr.readyState=== 4 && myXhr. status === 200){\n        const res=JSON.parse(myXhr.response);\n        const formattedData = {\n            token:token,\n            user:{\n                firstname:firstname,\n                lastname:lastname,\n                email:(res.length>0)?res[0].email:'',\n            },\n          itp: res.map(item => {\n            // Customize object properties for the template as needed\n            return {\n              // Example:\n              id:item.id,\n              coursename: item.coursename,\n              duration: item.duration,\n              startdate:item.startdate,\n              shortcode:item.shortcode,\n              courseId:item.courseid,\n              groupid:item.groupid,\n              customerid:item.customerid,\n              billid:item.billid,\n              email:item.email,\n              enddate:item.enddate,\n              location:item.location,\n              classroom:item.classroom,\n              schedule:item.schedule,\n              attendance:item.attendance,\n              assessment:item.assessment,\n              lastupdate:item.lastupdate,\n              courseUrl:item.courseUrl\n              // ... add other properties\n             \n              \n            };\n          })\n        }\n        showTemplateItp(formattedData);\n    }\n}\n\nconst showTemplateItp=(response)=>{\n    Templates.renderForPromise('block_itp/itp',response)\n    .then(({html,js})=>{\n        const content=document.querySelector('.block_itp_content');\n        content.innerHTML=\"\";\n        Templates.appendNodeContents('.block_itp_content',html,js);\n    })\n    .then(()=>{\n        sortITPTable();\n    })\n    .catch((error)=>displayException(error));\n}\n\n"],"names":["token","customer","group","billid","firstname","lastname","document","querySelector","addEventListener","e","linkAssFunctionEvent","preventDefault","xhr","XMLHttpRequest","url","window","location","protocol","hostname","open","formData","FormData","append","send","onload","event","onLoadFunction","onprogress","onProgressFunction","onerror","onErrorFunction","lengthComputable","console","log","loaded","total","myXhr","readyState","status","res","JSON","parse","response","formattedData","user","email","length","itp","map","item","id","coursename","duration","startdate","shortcode","courseId","courseid","groupid","customerid","enddate","classroom","schedule","attendance","assessment","lastupdate","courseUrl","showTemplateItp","renderForPromise","then","_ref","html","js","innerHTML","appendNodeContents","catch","error"],"mappings":"+TAIoB,CAACA,MAAMC,SAASC,MAAMC,OAAOC,UAAUC,YAC3CC,SAASC,cAAc,SAC3BC,iBAAiB,SAASC,IAC9BC,qBAAqBD,EAAET,MAAMC,SAASC,MAAMC,OAAOC,UAAUC,oBAI/DK,qBAAqB,CAACD,EAAET,MAAMC,SAASC,MAAMC,OAAOC,UAAUC,YAChEI,EAAEE,uBACIC,IAAI,IAAIC,eACRC,IAAIC,OAAOC,SAASC,SAAS,KAAKF,OAAOC,SAASE,SAAS,8BACjEN,IAAIO,KAAK,OAAOL,KAAI,SACdM,SAAU,IAAIC,SACpBD,SAASE,OAAO,UAAUtB,OAC1BoB,SAASE,OAAO,aAAa,qBAC7BF,SAASE,OAAO,qBAAqB,QACrCF,SAASE,OAAO,qBAAqB,aACrCF,SAASE,OAAO,mBAAmB,OACnCF,SAASE,OAAO,sBAAsBrB,UACtCmB,SAASE,OAAO,mBAAmBpB,OACnCkB,SAASE,OAAO,oBAAoBnB,QACpCS,IAAIW,KAAKH,UACTR,IAAIY,OAAQC,QACRC,eAAed,IAAIR,UAAUC,SAASL,QAE1CY,IAAIe,WAAYF,QACZG,mBAAmBH,QAEvBb,IAAIiB,QAAQ,KACRC,oBAIFF,mBAAsBH,QACpBA,MAAMM,iBACRhB,OAAOiB,QAAQC,wBAAiBR,MAAMS,sBAAaT,MAAMU,iBAEzDpB,OAAOiB,QAAQC,wBAAiBR,MAAMS,mBAItCJ,gBAAkB,KACpBf,OAAOiB,QAAQC,IAAI,sBAGjBP,eAAe,CAACU,MAAMhC,UAAUC,SAASL,YACnB,IAApBoC,MAAMC,YAAqC,MAAlBD,MAAOE,OAAe,OACzCC,IAAIC,KAAKC,MAAML,MAAMM,UACrBC,cAAgB,CAClB3C,MAAMA,MACN4C,KAAK,CACDxC,UAAUA,UACVC,SAASA,SACTwC,MAAON,IAAIO,OAAO,EAAGP,IAAI,GAAGM,MAAM,IAExCE,IAAKR,IAAIS,KAAIC,OAEJ,CAELC,GAAGD,KAAKC,GACRC,WAAYF,KAAKE,WACjBC,SAAUH,KAAKG,SACfC,UAAUJ,KAAKI,UACfC,UAAUL,KAAKK,UACfC,SAASN,KAAKO,SACdC,QAAQR,KAAKQ,QACbC,WAAWT,KAAKS,WAChBvD,OAAO8C,KAAK9C,OACZ0C,MAAMI,KAAKJ,MACXc,QAAQV,KAAKU,QACb3C,SAASiC,KAAKjC,SACd4C,UAAUX,KAAKW,UACfC,SAASZ,KAAKY,SACdC,WAAWb,KAAKa,WAChBC,WAAWd,KAAKc,WAChBC,WAAWf,KAAKe,WAChBC,UAAUhB,KAAKgB,eAOrBC,gBAAgBvB,iBAIlBuB,gBAAiBxB,8BACTyB,iBAAiB,gBAAgBzB,UAC1C0B,MAAKC,WAACC,KAACA,KAADC,GAAMA,SACKjE,SAASC,cAAc,sBAC7BiE,UAAU,sBACRC,mBAAmB,qBAAqBH,KAAKC,OAE1DH,MAAK,4CAGLM,OAAOC,QAAQ,2BAAiBA"}