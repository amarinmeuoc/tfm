define("block_itp/downloadpdf",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0;_exports.init=(PDF,user,courses)=>{const bocertificate=document.querySelector("#bocertificate");window.console.log("pulsado...",courses),null!==bocertificate&&bocertificate.addEventListener("click",(()=>{const coursetitles=courses[0],coursecodes=courses[1],startdates=courses[2],enddates=courses[3],counts=courses[4],att=courses[5],ass=courses[6],groupedData=groupbycodes(coursecodes,coursetitles,startdates,enddates,counts,att,ass),result=getResult(groupedData);!async function(PDF,user,result){const pdfDoc=await PDF.PDFDocument.create(),font=await pdfDoc.embedFont(PDF.StandardFonts.Helvetica),fontBold=await pdfDoc.embedFont(PDF.StandardFonts.HelveticaBold),logoNavantiaURL="/blocks/itp/pix/navantia-logo.png",logoNavantiaImageBytes=await fetch(logoNavantiaURL).then((res=>res.arrayBuffer())),logoNavantia=await pdfDoc.embedPng(logoNavantiaImageBytes),fondoURL="/blocks/itp/pix/marco-vertical-navantia.jpg",fondoURLImageBytes=await fetch(fondoURL).then((res=>res.arrayBuffer())),fondo=await pdfDoc.embedJpg(fondoURLImageBytes);let page=pdfDoc.addPage();const{width:width,height:height}=page.getSize(),text="Trainee report",textSize=24,textWidth=font.widthOfTextAtSize(text,textSize),textHeight=font.heightAtSize(textSize),verticalGap=textHeight/2,comienzo=120;page.drawImage(fondo,{x:0,y:0,width:page.getWidth(),height:page.getHeight()}),page.drawImage(logoNavantia,{x:45,y:page.getHeight()-100,width:110,height:60}),page.drawText(text,{x:width/2-textWidth/2,y:height-textHeight-verticalGap-comienzo,size:textSize,font:font,color:PDF.rgb(0,.53,.71)});const startdate=result.reduce(((acc,currentValue)=>acc<=currentValue.minStartDate?acc:currentValue.minStartDate),result[0].minStartDate);let startdateAux=new Date(1e3*startdate);day=startdateAux.getDate(),month=startdateAux.getMonth()+1,year=startdateAux.getFullYear();let formattedStartDate="".concat(day.toString().padStart(2,"0"),"-").concat(month.toString().padStart(2,"0"),"-").concat(year);const enddate=result.reduce(((acc,currentValue)=>acc>currentValue.maxEndDate?acc:currentValue.maxEndDate),result[0].maxEndDate);let enddateAux=new Date(1e3*enddate);day=enddateAux.getDate(),month=enddateAux.getMonth()+1,year=enddateAux.getFullYear();let formattedEndDate="".concat(day.toString().padStart(2,"0"),"-").concat(month.toString().padStart(2,"0"),"-").concat(year);const textBody="Below is a detailed list of the grades obtained by the trainee: ".concat(user.firstname,", ").concat(user.lastname," with billid: ").concat(user.firstname,", in the training programme of Navantia which started in ").concat(formattedStartDate," to ").concat(formattedEndDate,"."),textBodySize=14,textBodyHeight=(font.widthOfTextAtSize(textBody,textBodySize),font.heightAtSize(textBodySize));page.drawText(textBody,{x:40,y:height-verticalGap-textHeight-verticalGap-textBodyHeight-verticalGap-verticalGap-comienzo,size:textBodySize,font:font,color:PDF.rgb(0,0,0),maxWidth:width-80,wordBreaks:[" "]});let lineHeightPos=height-175-comienzo;page.drawLine({start:{x:40,y:lineHeightPos},end:{x:width-40,y:lineHeightPos},thickness:1,color:PDF.rgb(0,.53,.71),opacity:.5});const field1="Coursename",textFieldSize=10,textField1Width=font.widthOfTextAtSize(field1,textFieldSize),textField1Height=font.heightAtSize(textFieldSize);page.drawText(field1,{x:45,y:height-180+textField1Height-comienzo,size:textFieldSize,font:fontBold,color:PDF.rgb(0,0,0)});const field2="Duration",textField2Width=font.widthOfTextAtSize(field2,textFieldSize);page.drawText(field2,{x:50+textField1Width+textField2Width+180,y:height-180+textField1Height-comienzo,size:textFieldSize,font:fontBold,color:PDF.rgb(0,0,0)});const field3="Attendance",textField3Width=font.widthOfTextAtSize(field3,textFieldSize),field4="Assessment",textField4Width=font.widthOfTextAtSize(field4,textFieldSize);page.drawText(field3,{x:width-55-textField3Width-textField4Width-30,y:height-180+textField1Height-comienzo,size:textFieldSize,font:fontBold,color:PDF.rgb(0,0,0)}),page.drawText(field4,{x:width-55-textField4Width,y:height-180+textField1Height-comienzo,size:textFieldSize,font:fontBold,color:PDF.rgb(0,0,0)}),result.map(((course,index)=>{15!=index&&30!=index&&45!=index&&60!=index&&75!=index||(page=pdfDoc.addPage(),page.drawImage(fondo,{x:0,y:0,width:page.getWidth(),height:page.getHeight()}),page.drawImage(logoNavantia,{x:45,y:page.getHeight()-100,width:110,height:60}),page.drawText(text,{x:width/2-textWidth/2,y:height-textHeight-verticalGap-comienzo,size:textSize,font:font,color:PDF.rgb(0,.53,.71)}),page.drawText(textBody,{x:40,y:height-verticalGap-textHeight-verticalGap-textBodyHeight-verticalGap-verticalGap-comienzo,size:textBodySize,font:font,color:PDF.rgb(0,0,0),maxWidth:width-80,wordBreaks:[" "]}),lineHeightPos=height-175-comienzo,page.drawLine({start:{x:40,y:lineHeightPos},end:{x:width-40,y:lineHeightPos},thickness:1,color:PDF.rgb(0,.53,.71),opacity:.5}),page.drawText(field1,{x:45,y:height-180+textField1Height-comienzo,size:textFieldSize,font:fontBold,color:PDF.rgb(0,0,0)}),page.drawText(field2,{x:50+textField1Width+textField2Width+180,y:height-180+textField1Height-comienzo,size:textFieldSize,font:fontBold,color:PDF.rgb(0,0,0)}),page.drawText(field3,{x:width-55-textField3Width-textField4Width-30,y:height-180+textField1Height-comienzo,size:textFieldSize,font:fontBold,color:PDF.rgb(0,0,0)}),page.drawText(field4,{x:width-55-textField4Width,y:height-180+textField1Height-comienzo,size:textFieldSize,font:fontBold,color:PDF.rgb(0,0,0)}));font.widthOfTextAtSize(course.titles[0],textFieldSize);let textFieldHeight=font.heightAtSize(textFieldSize);lineHeightPos-=18;const courseTitles=function(str,maxLength){if(str.length>maxLength)return str.slice(0,maxLength-3)+"...";return str}(course.titles[0],40);page.drawText(courseTitles,{x:45,y:lineHeightPos+textFieldHeight/2,size:textFieldSize,font:font,color:PDF.rgb(0,0,0)});font.widthOfTextAtSize(course.sumCount,textFieldSize);page.drawText(course.sumCount,{x:50+textField1Width+textField2Width+180+textField2Width/3,y:lineHeightPos+textFieldHeight/2,size:textFieldSize,font:font,color:PDF.rgb(0,0,0)});let attendance="-"===course.averagePercentage1?"-":(1*course.averagePercentage1).toFixed(2);page.drawText(attendance,{x:width-100-textField3Width-textField4Width+textField3Width/2,y:lineHeightPos+textFieldHeight/2,size:textFieldSize,font:font,color:PDF.rgb(0,0,0)});let assessment="-"===course.averagePercentage2?"-":(1*course.averagePercentage2).toFixed(2);page.drawText(assessment,{x:width-75-textField4Width+textField4Width/2,y:lineHeightPos+textFieldHeight/2,size:textFieldSize,font:font,color:PDF.rgb(0,0,0)}),page.drawLine({start:{x:40,y:lineHeightPos},end:{x:width-40,y:lineHeightPos},thickness:1,color:PDF.rgb(0,.53,.71),opacity:.5})}));const listComputedAtt=result.filter((elem=>"-"!==elem.averagePercentage1)),listComputedAss=result.filter((elem=>"-"!==elem.averagePercentage2));let avgAtt=listComputedAtt.reduce(((acumulador,elementoActual)=>acumulador+Math.round(100*elementoActual.averagePercentage1)/100),0)/listComputedAtt.length;avgAtt=avgAtt.toFixed(2);let avgAss=listComputedAss.reduce(((acumulador,elementoActual)=>acumulador+Math.round(100*elementoActual.averagePercentage2)/100),0)/listComputedAss.length;avgAss=avgAss.toFixed(2),page.drawText("Total course average: ",{x:width-350,y:lineHeightPos-24,size:textFieldSize,font:fontBold,color:PDF.rgb(0,0,0)}),page.drawText(avgAtt+" %",{x:width-100-textField3Width/2-textField4Width,y:lineHeightPos-24,size:textFieldSize,font:fontBold,color:PDF.rgb(0,0,0)}),page.drawText(""+avgAss,{x:width-75-textField4Width/2,y:lineHeightPos-24,size:textFieldSize,font:fontBold,color:PDF.rgb(0,0,0)});const pdfBase64=await pdfDoc.saveAsBase64(),byteCharacters=atob(pdfBase64),byteNumbers=new Array(byteCharacters.length);for(let i=0;i<byteCharacters.length;i++)byteNumbers[i]=byteCharacters.charCodeAt(i);const byteArray=new Uint8Array(byteNumbers),blob=new Blob([byteArray],{type:"application/pdf"}),blobUrl=URL.createObjectURL(blob),link=document.createElement("a");link.href=blobUrl,link.download="documento.pdf",document.body.appendChild(link),link.click(),document.body.removeChild(link)}(PDF,user,result)}))};const groupbycodes=(codes,coursetitles,startdates,enddates,counts,att,ass)=>codes.reduce(((acc,code,index)=>(acc[code]||(acc[code]={titles:[],startDates:[],endDates:[],counts:[],att:[],ass:[]}),acc[code].titles.push(coursetitles[index]),acc[code].startDates.push(startdates[index]),acc[code].endDates.push(enddates[index]),acc[code].counts.push(counts[index]),acc[code].att.push(att[index]),acc[code].ass.push(ass[index]),acc)),{}),getResult=groupedData=>Object.keys(groupedData).map((code=>{const group=groupedData[code],minStartDate=Math.min(...group.startDates.map((date=>parseInt(date)))),maxEndDate=Math.max(...group.endDates.map((date=>parseInt(date)))),sumCount=group.counts.reduce(((sum,count)=>sum+parseInt(count)),0);let averagePercentage1=group.att.reduce(((sum,percentage)=>sum+parseFloat(percentage)),0)/group.att.length;averagePercentage1=isNaN(averagePercentage1)?"-":averagePercentage1;let averagePercentage2=group.ass.reduce(((sum,percentage)=>sum+parseFloat(percentage)),0)/group.ass.length;return averagePercentage2=isNaN(averagePercentage2)?"-":averagePercentage2,{code:code,titles:group.titles,minStartDate:minStartDate,maxEndDate:maxEndDate,sumCount:sumCount.toFixed(0),averagePercentage1:"-"===averagePercentage1?"-":averagePercentage1.toFixed(2),averagePercentage2:"-"===averagePercentage2?"-":averagePercentage2.toFixed(2)}}))}));

//# sourceMappingURL=downloadpdf.min.js.map