{"version":3,"file":"exportExcel.min.js","sources":["../src/exportExcel.js"],"sourcesContent":["\nexport const init=(XLSX, filesaver,blobutil)=>{\n    const boexportAss=document.querySelector('#id_export_ass');\n    const boexportAtt=document.querySelector('#id_export_att');\n    const boexportTrainee=document.querySelector('#id_export_trainee');\n\n    boexportAss.addEventListener('click',(e)=>{\n        exportToExcel(e,XLSX,filesaver,blobutil,'coursereport');\n    });\n\n    boexportAtt.addEventListener('click',(e)=>{\n        exportToExcel(e,XLSX,filesaver,blobutil,'dailyattendancereport');\n    });\n\n    boexportTrainee.addEventListener('click',(e)=>{\n        exportToExcel(e,XLSX,filesaver,blobutil,'traineereport');\n    });\n}\n\nconst exportToExcel=(e,XLSX,filesaver,blobutil,op)=>{\n    const token=document.querySelector('input[name=\"token\"]').value;\n    \n    prepareDataToSend(token,op);\n}\n\nconst prepareDataToSend=(token,op)=>{\n    const xhr=new XMLHttpRequest();\n    const url='http://'+window.location.hostname+'/webservice/rest/server.php';\n    xhr.open('POST',url,true);\n \n    const formData= new FormData();\n    formData.append('wstoken',token);\n    switch (op) {\n        case 'coursereport':\n            formData.append('wsfunction','report_coursereportadmin_get_total_assessment');\n            break;\n        case 'dailyattendancereport':\n            formData.append('wsfunction','report_coursereportadmin_get_total_dailyattendance');\n            break;\n        case 'traineereport':\n            formData.append('wsfunction','report_coursereportadmin_get_total_trainee_report');\n            break;\n        default:\n            break;\n    }\n    \n    formData.append('moodlewsrestformat','json');\n    formData.append('params[0][request]',op);\n    \n   \n    xhr.send(formData);\n    xhr.onload=(event)=>{\n        onLoadFunction(xhr,op);\n    }\n\n    xhr.onprogress = (event)=>{\n        onProgressFunction(event);\n    } \n    xhr.onerror = function() {\n        window.console.log(\"Solicitud fallida\");\n    };\n\n}\n\nconst onLoadFunction=(myXhr,op)=>{\n    const loader=document.querySelector('.loader');\n    loader.classList.add('.hide');\n    loader.classList.remove('.show');\n\n    if (myXhr.readyState===4 && myXhr.status===200){\n        const res=JSON.parse(myXhr.response);\n        switch (op) {\n            case 'coursereport':\n                createExcelFromJSON(res,'courseReport');\n                break;\n            case 'dailyattendancereport':\n                createExcelFromJSON(res,'dailyAttendanceReport');\n                break;\n            case 'traineereport':\n                createExcelFromJSON(res,'traineeReport');\n                break;\n            default:\n                break;\n        }\n        \n        \n    }\n}\n\nconst onProgressFunction=(event) =>{\n    console.log(`Uploaded ${event.loaded} of ${event.total}`);\n    const loader=document.querySelector('.loader');\n    loader.classList.remove('.hide');\n    loader.classList.add('.show');\n}\n\nconst createExcelFromJSON=(res,op)=>{\n    \n    let listado=[];\n\n    const wb=XLSX.utils.book_new();\n    const dr=new Date();\n    const dateFile=dr.getDate();\n    const month=dr.getMonth()+1\n    const year=dr.getFullYear();\n    const min=dr.getMinutes();\n    const hour=dr.getHours();\n    \n    wb.Props={\n        Title: \"Course report\",\n        Subject: \"Training program report\",\n        Author: \"Alberto MarÃ­n\",\n        CreateDate: new Date(year,month,dateFile)\n    };\n\n    if (op==='courseReport'){\n        if (res[0].assessment_list.length>0){\n            listado=res[0].assessment_list.map(elem=>{\n                const sdate=new Date(elem.startdate*1000);\n                const syear=sdate.getFullYear();\n                const smonth=sdate.getMonth()+1;\n                const sday=sdate.getDate()+1;\n                elem.startdate=new Date(syear+\"-\"+smonth+\"-\"+sday);\n                const edate=new Date(elem.enddate*1000);\n                const eyear=edate.getFullYear();\n                const emonth=edate.getMonth()+1;\n                const eday=edate.getDate()+1;\n                elem.enddate=new Date(eyear+\"-\"+emonth+\"-\"+eday);\n                elem.assessment=elem.assessment*1;\n                elem.assessment=parseFloat(elem.assessment);\n                elem.assessment= Math.round(elem.assessment*100)/100;\n                elem.attendance=elem.attendance*1;\n                elem.attendance=parseFloat(elem.attendance);\n                elem.attendance= Math.round(elem.attendance*100)/100;\n                delete elem.customerid;\n                delete elem.groupid;\n    \n                return Object.values(elem);\n            });\n            if (res[0].ifobserver){\n                listado=res[0].assessment_list.map(elem=>{\n                    delete elem.customercode;\n                    return Object.values(elem);\n                });\n            }\n            let titles=Object.keys(res[0].assessment_list[0]);\n            listado.unshift(titles);\n        }\n        wb.SheetNames.push(\"courseAssessment\");\n        const ws=XLSX.utils.aoa_to_sheet(listado);\n        wb.Sheets[\"courseAssessment\"]=ws;\n    }\n\n    if (op==='traineeReport'){\n        if (res[0].assessment_list.length>0){\n            const data=res[0].assessment_list;\n            const groupedByMail=data.reduce((acc,curr)=>{\n                const {customercode,groupname,billid,firstname,lastname,email,assessment,attendance}=curr;\n                if (!acc[email]){\n                    acc[email]={customercode,groupname,billid,firstname,lastname,email,count:0, sumAssessment:0,sumAttendance:0};\n                }\n                acc[email].count++;\n                acc[email].sumAssessment+=parseFloat(assessment)*1;\n                acc[email].sumAttendance+=parseFloat(attendance)*1;\n                return acc;\n            },{});\n            const resultado=Object.entries(groupedByMail).map(([email,{customercode,groupname,billid,firstname,lastname,count,sumAssessment,sumAttendance}])=>({\n               \n               customercode:customercode,\n               groupname:groupname,\n               billid:billid,\n               firstname:firstname,\n               lastname:lastname,\n               email,\n               attendance:sumAttendance/count, \n               assessment:sumAssessment/count,\n            }));\n            \n            listado=resultado.map(elem=>{\n                \n                elem.assessment=elem.assessment*1;\n                elem.assessment=parseFloat(elem.assessment);\n                elem.assessment= Math.round(elem.assessment*100)/100;\n                elem.attendance=elem.attendance*1;\n                elem.attendance=parseFloat(elem.attendance);\n                elem.attendance= Math.round(elem.attendance*100)/100;\n                delete elem.customerid;\n                delete elem.groupid;\n                \n    \n                return Object.values(elem);\n            });\n            \n            //let titles=Object.keys(res[0].assessment_list[0]);\n            listado.unshift(['customercode','group','billid','firstname','lastname','email','attendance','assessment']);\n        }\n        wb.SheetNames.push(\"traineeReport\");\n        const ws=XLSX.utils.aoa_to_sheet(listado);\n        wb.Sheets[\"traineeReport\"]=ws;\n    }\n\n    if (op==='dailyAttendanceReport'){\n        if (res[0].attendance_list.length>0){\n            listado=res[0].attendance_list.map(elem=>{\n                const date=new Date(elem.dateatt*1000);\n                const year=date.getFullYear();\n                const month=date.getMonth()+1;\n                const day=date.getDate()+1;\n                elem.dateatt=new Date(year+\"-\"+month+\"-\"+day);\n                return Object.values(elem);\n            });\n            let titles=Object.keys(res[0].attendance_list[0]);\n            listado.unshift(titles);\n        }\n        wb.SheetNames.push(\"AttendanceReport\");\n        const ws=XLSX.utils.aoa_to_sheet(listado);\n        wb.Sheets[\"AttendanceReport\"]=ws;\n    }\n    \n    \n    \n    \n    \n    \n    const wbout=XLSX.write(wb,{bookType:'xlsx',type:'binary'});\n    const nameFile=op+dateFile+'.'+month+'.'+year+'.'+hour+'.'+min+'.xlsx';\n    saveAs(new Blob([s2ab(wbout)],{type:\"application/octet-stream\"}),nameFile)\n    \n}\n\nconst s2ab=(s) => {\n    var buf = new ArrayBuffer(s.length);\n    var view = new Uint8Array(buf);\n    for (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n    return buf;\n}"],"names":["XLSX","filesaver","blobutil","boexportAss","document","querySelector","boexportAtt","boexportTrainee","addEventListener","e","exportToExcel","op","token","value","prepareDataToSend","xhr","XMLHttpRequest","url","window","location","hostname","open","formData","FormData","append","send","onload","event","onLoadFunction","onprogress","onProgressFunction","onerror","console","log","myXhr","loader","classList","add","remove","readyState","status","res","JSON","parse","response","createExcelFromJSON","loaded","total","listado","wb","utils","book_new","dr","Date","dateFile","getDate","month","getMonth","year","getFullYear","min","getMinutes","hour","getHours","Props","Title","Subject","Author","CreateDate","assessment_list","length","map","elem","sdate","startdate","syear","smonth","sday","edate","enddate","eyear","emonth","eday","assessment","parseFloat","Math","round","attendance","customerid","groupid","Object","values","ifobserver","customercode","titles","keys","unshift","SheetNames","push","ws","aoa_to_sheet","Sheets","groupedByMail","reduce","acc","curr","groupname","billid","firstname","lastname","email","count","sumAssessment","sumAttendance","entries","_ref","attendance_list","date","dateatt","day","wbout","write","bookType","type","nameFile","saveAs","Blob","s2ab","s","buf","ArrayBuffer","view","Uint8Array","i","charCodeAt"],"mappings":"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"}